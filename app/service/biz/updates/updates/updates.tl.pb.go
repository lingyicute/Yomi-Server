//
// WARNING! All changes made in this file will be lost!
// Created from 'scheme.tl' by 'mtprotoc'
//
// Copyright (c) 2024-present,  Teamgram Authors.
//  All rights reserved.
//
// Author: Benqi (wubenqi@gmail.com)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: updates.tl.proto

package updates

import (
	mtproto "github.com/teamgram/proto/mtproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TLConstructor int32

const (
	TLConstructor_CRC32_UNKNOWN                        TLConstructor = 0
	TLConstructor_CRC32_channelDifference              TLConstructor = -853998774
	TLConstructor_CRC32_differenceEmpty                TLConstructor = -1948526002
	TLConstructor_CRC32_difference                     TLConstructor = 1417839403
	TLConstructor_CRC32_differenceSlice                TLConstructor = -879338017
	TLConstructor_CRC32_differenceTooLong              TLConstructor = 896724528
	TLConstructor_CRC32_updates_getStateV2             TLConstructor = 1173671269
	TLConstructor_CRC32_updates_getDifferenceV2        TLConstructor = -1217698151
	TLConstructor_CRC32_updates_getChannelDifferenceV2 TLConstructor = 1302540682
)

// Enum value maps for TLConstructor.
var (
	TLConstructor_name = map[int32]string{
		0:           "CRC32_UNKNOWN",
		-853998774:  "CRC32_channelDifference",
		-1948526002: "CRC32_differenceEmpty",
		1417839403:  "CRC32_difference",
		-879338017:  "CRC32_differenceSlice",
		896724528:   "CRC32_differenceTooLong",
		1173671269:  "CRC32_updates_getStateV2",
		-1217698151: "CRC32_updates_getDifferenceV2",
		1302540682:  "CRC32_updates_getChannelDifferenceV2",
	}
	TLConstructor_value = map[string]int32{
		"CRC32_UNKNOWN":                        0,
		"CRC32_channelDifference":              -853998774,
		"CRC32_differenceEmpty":                -1948526002,
		"CRC32_difference":                     1417839403,
		"CRC32_differenceSlice":                -879338017,
		"CRC32_differenceTooLong":              896724528,
		"CRC32_updates_getStateV2":             1173671269,
		"CRC32_updates_getDifferenceV2":        -1217698151,
		"CRC32_updates_getChannelDifferenceV2": 1302540682,
	}
)

func (x TLConstructor) Enum() *TLConstructor {
	p := new(TLConstructor)
	*p = x
	return p
}

func (x TLConstructor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TLConstructor) Descriptor() protoreflect.EnumDescriptor {
	return file_updates_tl_proto_enumTypes[0].Descriptor()
}

func (TLConstructor) Type() protoreflect.EnumType {
	return &file_updates_tl_proto_enumTypes[0]
}

func (x TLConstructor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TLConstructor.Descriptor instead.
func (TLConstructor) EnumDescriptor() ([]byte, []int) {
	return file_updates_tl_proto_rawDescGZIP(), []int{0}
}

// ChannelDifference <--
//   - TL_channelDifference
type ChannelDifference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateName string             `protobuf:"bytes,1,opt,name=predicate_name,json=predicateName,proto3" json:"predicate_name,omitempty"`
	Constructor   TLConstructor      `protobuf:"varint,2,opt,name=constructor,proto3,enum=updates.TLConstructor" json:"constructor,omitempty"`
	Final         bool               `protobuf:"varint,3,opt,name=final,proto3" json:"final,omitempty"`
	Pts           int32              `protobuf:"varint,4,opt,name=pts,proto3" json:"pts,omitempty"`
	NewMessages   []*mtproto.Message `protobuf:"bytes,5,rep,name=new_messages,json=newMessages,proto3" json:"new_messages,omitempty"`
	OtherUpdates  []*mtproto.Update  `protobuf:"bytes,6,rep,name=other_updates,json=otherUpdates,proto3" json:"other_updates,omitempty"`
}

func (x *ChannelDifference) Reset() {
	*x = ChannelDifference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_tl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelDifference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelDifference) ProtoMessage() {}

func (x *ChannelDifference) ProtoReflect() protoreflect.Message {
	mi := &file_updates_tl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelDifference.ProtoReflect.Descriptor instead.
func (*ChannelDifference) Descriptor() ([]byte, []int) {
	return file_updates_tl_proto_rawDescGZIP(), []int{0}
}

func (x *ChannelDifference) GetPredicateName() string {
	if x != nil {
		return x.PredicateName
	}
	return ""
}

func (x *ChannelDifference) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *ChannelDifference) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

func (x *ChannelDifference) GetPts() int32 {
	if x != nil {
		return x.Pts
	}
	return 0
}

func (x *ChannelDifference) GetNewMessages() []*mtproto.Message {
	if x != nil {
		return x.NewMessages
	}
	return nil
}

func (x *ChannelDifference) GetOtherUpdates() []*mtproto.Update {
	if x != nil {
		return x.OtherUpdates
	}
	return nil
}

type TLChannelDifference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *ChannelDifference `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLChannelDifference) Reset() {
	*x = TLChannelDifference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_tl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLChannelDifference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLChannelDifference) ProtoMessage() {}

func (x *TLChannelDifference) ProtoReflect() protoreflect.Message {
	mi := &file_updates_tl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLChannelDifference.ProtoReflect.Descriptor instead.
func (*TLChannelDifference) Descriptor() ([]byte, []int) {
	return file_updates_tl_proto_rawDescGZIP(), []int{1}
}

func (x *TLChannelDifference) GetData2() *ChannelDifference {
	if x != nil {
		return x.Data2
	}
	return nil
}

// Difference <--
//   - TL_differenceEmpty
//   - TL_difference
//   - TL_differenceSlice
//   - TL_differenceTooLong
type Difference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateName     string                 `protobuf:"bytes,1,opt,name=predicate_name,json=predicateName,proto3" json:"predicate_name,omitempty"`
	Constructor       TLConstructor          `protobuf:"varint,2,opt,name=constructor,proto3,enum=updates.TLConstructor" json:"constructor,omitempty"`
	State             *mtproto.Updates_State `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	NewMessages       []*mtproto.Message     `protobuf:"bytes,4,rep,name=new_messages,json=newMessages,proto3" json:"new_messages,omitempty"`
	OtherUpdates      []*mtproto.Update      `protobuf:"bytes,5,rep,name=other_updates,json=otherUpdates,proto3" json:"other_updates,omitempty"`
	IntermediateState *mtproto.Updates_State `protobuf:"bytes,6,opt,name=intermediate_state,json=intermediateState,proto3" json:"intermediate_state,omitempty"`
	Pts               int32                  `protobuf:"varint,7,opt,name=pts,proto3" json:"pts,omitempty"`
}

func (x *Difference) Reset() {
	*x = Difference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_tl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Difference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Difference) ProtoMessage() {}

func (x *Difference) ProtoReflect() protoreflect.Message {
	mi := &file_updates_tl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Difference.ProtoReflect.Descriptor instead.
func (*Difference) Descriptor() ([]byte, []int) {
	return file_updates_tl_proto_rawDescGZIP(), []int{2}
}

func (x *Difference) GetPredicateName() string {
	if x != nil {
		return x.PredicateName
	}
	return ""
}

func (x *Difference) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *Difference) GetState() *mtproto.Updates_State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Difference) GetNewMessages() []*mtproto.Message {
	if x != nil {
		return x.NewMessages
	}
	return nil
}

func (x *Difference) GetOtherUpdates() []*mtproto.Update {
	if x != nil {
		return x.OtherUpdates
	}
	return nil
}

func (x *Difference) GetIntermediateState() *mtproto.Updates_State {
	if x != nil {
		return x.IntermediateState
	}
	return nil
}

func (x *Difference) GetPts() int32 {
	if x != nil {
		return x.Pts
	}
	return 0
}

type TLDifferenceEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *Difference `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLDifferenceEmpty) Reset() {
	*x = TLDifferenceEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_tl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLDifferenceEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLDifferenceEmpty) ProtoMessage() {}

func (x *TLDifferenceEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_updates_tl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLDifferenceEmpty.ProtoReflect.Descriptor instead.
func (*TLDifferenceEmpty) Descriptor() ([]byte, []int) {
	return file_updates_tl_proto_rawDescGZIP(), []int{3}
}

func (x *TLDifferenceEmpty) GetData2() *Difference {
	if x != nil {
		return x.Data2
	}
	return nil
}

type TLDifference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *Difference `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLDifference) Reset() {
	*x = TLDifference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_tl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLDifference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLDifference) ProtoMessage() {}

func (x *TLDifference) ProtoReflect() protoreflect.Message {
	mi := &file_updates_tl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLDifference.ProtoReflect.Descriptor instead.
func (*TLDifference) Descriptor() ([]byte, []int) {
	return file_updates_tl_proto_rawDescGZIP(), []int{4}
}

func (x *TLDifference) GetData2() *Difference {
	if x != nil {
		return x.Data2
	}
	return nil
}

type TLDifferenceSlice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *Difference `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLDifferenceSlice) Reset() {
	*x = TLDifferenceSlice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_tl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLDifferenceSlice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLDifferenceSlice) ProtoMessage() {}

func (x *TLDifferenceSlice) ProtoReflect() protoreflect.Message {
	mi := &file_updates_tl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLDifferenceSlice.ProtoReflect.Descriptor instead.
func (*TLDifferenceSlice) Descriptor() ([]byte, []int) {
	return file_updates_tl_proto_rawDescGZIP(), []int{5}
}

func (x *TLDifferenceSlice) GetData2() *Difference {
	if x != nil {
		return x.Data2
	}
	return nil
}

type TLDifferenceTooLong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *Difference `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLDifferenceTooLong) Reset() {
	*x = TLDifferenceTooLong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_tl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLDifferenceTooLong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLDifferenceTooLong) ProtoMessage() {}

func (x *TLDifferenceTooLong) ProtoReflect() protoreflect.Message {
	mi := &file_updates_tl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLDifferenceTooLong.ProtoReflect.Descriptor instead.
func (*TLDifferenceTooLong) Descriptor() ([]byte, []int) {
	return file_updates_tl_proto_rawDescGZIP(), []int{6}
}

func (x *TLDifferenceTooLong) GetData2() *Difference {
	if x != nil {
		return x.Data2
	}
	return nil
}

// --------------------------------------------------------------------------------------------
type TLUpdatesGetStateV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=updates.TLConstructor" json:"constructor,omitempty"`
	AuthKeyId   int64         `protobuf:"varint,3,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	UserId      int64         `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *TLUpdatesGetStateV2) Reset() {
	*x = TLUpdatesGetStateV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_tl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLUpdatesGetStateV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLUpdatesGetStateV2) ProtoMessage() {}

func (x *TLUpdatesGetStateV2) ProtoReflect() protoreflect.Message {
	mi := &file_updates_tl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLUpdatesGetStateV2.ProtoReflect.Descriptor instead.
func (*TLUpdatesGetStateV2) Descriptor() ([]byte, []int) {
	return file_updates_tl_proto_rawDescGZIP(), []int{7}
}

func (x *TLUpdatesGetStateV2) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLUpdatesGetStateV2) GetAuthKeyId() int64 {
	if x != nil {
		return x.AuthKeyId
	}
	return 0
}

func (x *TLUpdatesGetStateV2) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// --------------------------------------------------------------------------------------------
type TLUpdatesGetDifferenceV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor   TLConstructor          `protobuf:"varint,1,opt,name=constructor,proto3,enum=updates.TLConstructor" json:"constructor,omitempty"`
	AuthKeyId     int64                  `protobuf:"varint,3,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	UserId        int64                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Pts           int32                  `protobuf:"varint,5,opt,name=pts,proto3" json:"pts,omitempty"`
	PtsTotalLimit *wrapperspb.Int32Value `protobuf:"bytes,6,opt,name=pts_total_limit,json=ptsTotalLimit,proto3" json:"pts_total_limit,omitempty"`
	Date          int64                  `protobuf:"varint,7,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *TLUpdatesGetDifferenceV2) Reset() {
	*x = TLUpdatesGetDifferenceV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_tl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLUpdatesGetDifferenceV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLUpdatesGetDifferenceV2) ProtoMessage() {}

func (x *TLUpdatesGetDifferenceV2) ProtoReflect() protoreflect.Message {
	mi := &file_updates_tl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLUpdatesGetDifferenceV2.ProtoReflect.Descriptor instead.
func (*TLUpdatesGetDifferenceV2) Descriptor() ([]byte, []int) {
	return file_updates_tl_proto_rawDescGZIP(), []int{8}
}

func (x *TLUpdatesGetDifferenceV2) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLUpdatesGetDifferenceV2) GetAuthKeyId() int64 {
	if x != nil {
		return x.AuthKeyId
	}
	return 0
}

func (x *TLUpdatesGetDifferenceV2) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TLUpdatesGetDifferenceV2) GetPts() int32 {
	if x != nil {
		return x.Pts
	}
	return 0
}

func (x *TLUpdatesGetDifferenceV2) GetPtsTotalLimit() *wrapperspb.Int32Value {
	if x != nil {
		return x.PtsTotalLimit
	}
	return nil
}

func (x *TLUpdatesGetDifferenceV2) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

// --------------------------------------------------------------------------------------------
type TLUpdatesGetChannelDifferenceV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=updates.TLConstructor" json:"constructor,omitempty"`
	AuthKeyId   int64         `protobuf:"varint,3,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	UserId      int64         `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChannelId   int64         `protobuf:"varint,5,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Pts         int32         `protobuf:"varint,6,opt,name=pts,proto3" json:"pts,omitempty"`
	Limit       int32         `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *TLUpdatesGetChannelDifferenceV2) Reset() {
	*x = TLUpdatesGetChannelDifferenceV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updates_tl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLUpdatesGetChannelDifferenceV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLUpdatesGetChannelDifferenceV2) ProtoMessage() {}

func (x *TLUpdatesGetChannelDifferenceV2) ProtoReflect() protoreflect.Message {
	mi := &file_updates_tl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLUpdatesGetChannelDifferenceV2.ProtoReflect.Descriptor instead.
func (*TLUpdatesGetChannelDifferenceV2) Descriptor() ([]byte, []int) {
	return file_updates_tl_proto_rawDescGZIP(), []int{9}
}

func (x *TLUpdatesGetChannelDifferenceV2) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLUpdatesGetChannelDifferenceV2) GetAuthKeyId() int64 {
	if x != nil {
		return x.AuthKeyId
	}
	return 0
}

func (x *TLUpdatesGetChannelDifferenceV2) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TLUpdatesGetChannelDifferenceV2) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *TLUpdatesGetChannelDifferenceV2) GetPts() int32 {
	if x != nil {
		return x.Pts
	}
	return 0
}

func (x *TLUpdatesGetChannelDifferenceV2) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

var File_updates_tl_proto protoreflect.FileDescriptor

var file_updates_tl_proto_rawDesc = []byte{
	0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x74, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x74, 0x6c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x74, 0x6c, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x74, 0x6c, 0x2e, 0x73, 0x79,
	0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x02, 0x0a, 0x11, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x70, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x0b, 0x6e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0d,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x22, 0x48, 0x0a, 0x14, 0x54, 0x4c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0xdf, 0x02, 0x0a,
	0x0a, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x6e, 0x65,
	0x77, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x34, 0x0a, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x74, 0x73, 0x22, 0x3f,
	0x0a, 0x12, 0x54, 0x4c, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x44, 0x69,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22,
	0x3a, 0x0a, 0x0d, 0x54, 0x4c, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x29, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0x3f, 0x0a, 0x12, 0x54,
	0x4c, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x12, 0x29, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0x41, 0x0a, 0x14,
	0x54, 0x4c, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x6f,
	0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x44, 0x69,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22,
	0x8a, 0x01, 0x0a, 0x15, 0x54, 0x4c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x67,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x32, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xfa, 0x01, 0x0a,
	0x1a, 0x54, 0x4c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x44,
	0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x32, 0x12, 0x38, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68,
	0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x74, 0x73,
	0x12, 0x43, 0x0a, 0x0f, 0x70, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x70, 0x74, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x21, 0x54, 0x4c,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x32, 0x12,
	0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x54,
	0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x70, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x2a, 0xc7, 0x02, 0x0a, 0x0d, 0x54, 0x4c,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x11, 0x0a, 0x0d, 0x43,
	0x52, 0x43, 0x33, 0x32, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x24,
	0x0a, 0x17, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44,
	0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x10, 0xca, 0x86, 0xe4, 0xe8, 0xfc, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x12, 0x22, 0x0a, 0x15, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x64, 0x69,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x10, 0xce, 0xb4,
	0xef, 0xde, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x18, 0x0a, 0x10, 0x43, 0x52, 0x43, 0x33,
	0x32, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x10, 0xab, 0x86, 0x8a,
	0xa4, 0x05, 0x12, 0x22, 0x0a, 0x15, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x64, 0x69, 0x66, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x10, 0xdf, 0xbb, 0xd9, 0xdc,
	0xfc, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1f, 0x0a, 0x17, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f,
	0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x6f, 0x4c, 0x6f, 0x6e,
	0x67, 0x10, 0xb0, 0xdc, 0xcb, 0xab, 0x03, 0x12, 0x20, 0x0a, 0x18, 0x43, 0x52, 0x43, 0x33, 0x32,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x56, 0x32, 0x10, 0xe5, 0x9a, 0xd3, 0xaf, 0x04, 0x12, 0x2a, 0x0a, 0x1d, 0x43, 0x52, 0x43,
	0x33, 0x32, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x44, 0x69,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x32, 0x10, 0x99, 0xcd, 0xad, 0xbb, 0xfb,
	0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x2c, 0x0a, 0x24, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x32, 0x10, 0x8a, 0xe3,
	0x8c, 0xed, 0x04, 0x32, 0x9f, 0x02, 0x0a, 0x0a, 0x52, 0x50, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x4e, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x67, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x32, 0x12, 0x1e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x2e, 0x54, 0x4c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x67, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x32, 0x1a, 0x16, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x67, 0x65,
	0x74, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x32, 0x12, 0x23, 0x2e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x54, 0x4c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x56, 0x32, 0x1a, 0x13, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x66,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x1e, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44,
	0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x32, 0x12, 0x2a, 0x2e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x54, 0x4c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x5f, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x32, 0x1a, 0x1a, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x22, 0x00, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x67, 0x72, 0x61, 0x6d, 0x2f, 0x74, 0x65, 0x61,
	0x6d, 0x67, 0x72, 0x61, 0x6d, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_updates_tl_proto_rawDescOnce sync.Once
	file_updates_tl_proto_rawDescData = file_updates_tl_proto_rawDesc
)

func file_updates_tl_proto_rawDescGZIP() []byte {
	file_updates_tl_proto_rawDescOnce.Do(func() {
		file_updates_tl_proto_rawDescData = protoimpl.X.CompressGZIP(file_updates_tl_proto_rawDescData)
	})
	return file_updates_tl_proto_rawDescData
}

var file_updates_tl_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_updates_tl_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_updates_tl_proto_goTypes = []interface{}{
	(TLConstructor)(0),                      // 0: updates.TLConstructor
	(*ChannelDifference)(nil),               // 1: updates.ChannelDifference
	(*TLChannelDifference)(nil),             // 2: updates.TL_channelDifference
	(*Difference)(nil),                      // 3: updates.Difference
	(*TLDifferenceEmpty)(nil),               // 4: updates.TL_differenceEmpty
	(*TLDifference)(nil),                    // 5: updates.TL_difference
	(*TLDifferenceSlice)(nil),               // 6: updates.TL_differenceSlice
	(*TLDifferenceTooLong)(nil),             // 7: updates.TL_differenceTooLong
	(*TLUpdatesGetStateV2)(nil),             // 8: updates.TL_updates_getStateV2
	(*TLUpdatesGetDifferenceV2)(nil),        // 9: updates.TL_updates_getDifferenceV2
	(*TLUpdatesGetChannelDifferenceV2)(nil), // 10: updates.TL_updates_getChannelDifferenceV2
	(*mtproto.Message)(nil),                 // 11: mtproto.Message
	(*mtproto.Update)(nil),                  // 12: mtproto.Update
	(*mtproto.Updates_State)(nil),           // 13: mtproto.updates_State
	(*wrapperspb.Int32Value)(nil),           // 14: google.protobuf.Int32Value
}
var file_updates_tl_proto_depIdxs = []int32{
	0,  // 0: updates.ChannelDifference.constructor:type_name -> updates.TLConstructor
	11, // 1: updates.ChannelDifference.new_messages:type_name -> mtproto.Message
	12, // 2: updates.ChannelDifference.other_updates:type_name -> mtproto.Update
	1,  // 3: updates.TL_channelDifference.data2:type_name -> updates.ChannelDifference
	0,  // 4: updates.Difference.constructor:type_name -> updates.TLConstructor
	13, // 5: updates.Difference.state:type_name -> mtproto.updates_State
	11, // 6: updates.Difference.new_messages:type_name -> mtproto.Message
	12, // 7: updates.Difference.other_updates:type_name -> mtproto.Update
	13, // 8: updates.Difference.intermediate_state:type_name -> mtproto.updates_State
	3,  // 9: updates.TL_differenceEmpty.data2:type_name -> updates.Difference
	3,  // 10: updates.TL_difference.data2:type_name -> updates.Difference
	3,  // 11: updates.TL_differenceSlice.data2:type_name -> updates.Difference
	3,  // 12: updates.TL_differenceTooLong.data2:type_name -> updates.Difference
	0,  // 13: updates.TL_updates_getStateV2.constructor:type_name -> updates.TLConstructor
	0,  // 14: updates.TL_updates_getDifferenceV2.constructor:type_name -> updates.TLConstructor
	14, // 15: updates.TL_updates_getDifferenceV2.pts_total_limit:type_name -> google.protobuf.Int32Value
	0,  // 16: updates.TL_updates_getChannelDifferenceV2.constructor:type_name -> updates.TLConstructor
	8,  // 17: updates.RPCUpdates.updates_getStateV2:input_type -> updates.TL_updates_getStateV2
	9,  // 18: updates.RPCUpdates.updates_getDifferenceV2:input_type -> updates.TL_updates_getDifferenceV2
	10, // 19: updates.RPCUpdates.updates_getChannelDifferenceV2:input_type -> updates.TL_updates_getChannelDifferenceV2
	13, // 20: updates.RPCUpdates.updates_getStateV2:output_type -> mtproto.updates_State
	3,  // 21: updates.RPCUpdates.updates_getDifferenceV2:output_type -> updates.Difference
	1,  // 22: updates.RPCUpdates.updates_getChannelDifferenceV2:output_type -> updates.ChannelDifference
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_updates_tl_proto_init() }
func file_updates_tl_proto_init() {
	if File_updates_tl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_updates_tl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelDifference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_tl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLChannelDifference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_tl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Difference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_tl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLDifferenceEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_tl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLDifference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_tl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLDifferenceSlice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_tl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLDifferenceTooLong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_tl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLUpdatesGetStateV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_tl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLUpdatesGetDifferenceV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updates_tl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLUpdatesGetChannelDifferenceV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_updates_tl_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_updates_tl_proto_goTypes,
		DependencyIndexes: file_updates_tl_proto_depIdxs,
		EnumInfos:         file_updates_tl_proto_enumTypes,
		MessageInfos:      file_updates_tl_proto_msgTypes,
	}.Build()
	File_updates_tl_proto = out.File
	file_updates_tl_proto_rawDesc = nil
	file_updates_tl_proto_goTypes = nil
	file_updates_tl_proto_depIdxs = nil
}
