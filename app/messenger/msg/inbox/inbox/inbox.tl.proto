/*
 * WARNING! All changes made in this file will be lost!
 * Created from 'scheme.tl' by 'mtprotoc'
 *
 * Copyright (c) 2024-present,  Teamgram Authors.
 *  All rights reserved.
 *
 * Author: Benqi (wubenqi@gmail.com)
 */

syntax = "proto3";

package inbox;

import "google/protobuf/wrappers.proto";
import "schema.tl.core_types.proto";
import "schema.tl.transport.proto";
import "schema.tl.sync.proto";

option go_package = "github.com/teamgram/teamgram-server/app/messenger/msg/inbox/inbox";

enum TLConstructor {
    CRC32_UNKNOWN = 0;
    CRC32_inboxMessageData = 1002286548;
    CRC32_inboxMessageId = -963460705;
    CRC32_inbox_editUserMessageToInbox = 1559967656;
    CRC32_inbox_editChatMessageToInbox = 2031122959;
    CRC32_inbox_deleteMessagesToInbox = -2061734348;
    CRC32_inbox_deleteUserHistoryToInbox = 336232792;
    CRC32_inbox_deleteChatHistoryToInbox = -659905022;
    CRC32_inbox_readUserMediaUnreadToInbox = 364970827;
    CRC32_inbox_readChatMediaUnreadToInbox = 1430347220;
    CRC32_inbox_updateHistoryReaded = -1010283296;
    CRC32_inbox_updatePinnedMessage = -1452528908;
    CRC32_inbox_unpinAllMessages = 589079137;
    CRC32_inbox_sendUserMessageToInboxV2 = 2043341160;
    CRC32_inbox_editMessageToInboxV2 = -625238423;
    CRC32_inbox_readInboxHistory = -465427029;
    CRC32_inbox_readOutboxHistory = 477116106;
    CRC32_inbox_readMediaUnreadToInboxV2 = -356170942;
}


// InboxMessageData <--
//  + TL_inboxMessageData
//
message InboxMessageData {
    string predicate_name = 1;
    TLConstructor  constructor = 2;
    int64 random_id = 3;
    int64 dialog_message_id = 4;
    mtproto.Message message = 5;
}

message TL_inboxMessageData {
    InboxMessageData data2 = 1;
}


// InboxMessageId <--
//  + TL_inboxMessageId
//
message InboxMessageId {
    string predicate_name = 1;
    TLConstructor  constructor = 2;
    int32 id = 3;
    int64 dialog_message_id = 4;
}

message TL_inboxMessageId {
    InboxMessageId data2 = 1;
}





//--------------------------------------------------------------------------------------------
message TL_inbox_editUserMessageToInbox {
    TLConstructor  constructor = 1;
    int64 from_id = 3;
    int64 peer_user_id = 4;
    mtproto.Message message = 5;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_editChatMessageToInbox {
    TLConstructor  constructor = 1;
    int64 from_id = 3;
    int64 peer_chat_id = 4;
    mtproto.Message message = 5;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_deleteMessagesToInbox {
    TLConstructor  constructor = 1;
    int64 from_id = 3;
    int32 peer_type = 4;
    int64 peer_id = 5;
    repeated int64 id = 6;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_deleteUserHistoryToInbox {
    TLConstructor  constructor = 1;
    int64 from_id = 3;
    int64 peer_user_id = 4;
    bool just_clear = 5;
    int32 max_id = 6;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_deleteChatHistoryToInbox {
    TLConstructor  constructor = 1;
    int64 from_id = 3;
    int64 peer_chat_id = 4;
    int32 max_id = 5;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_readUserMediaUnreadToInbox {
    TLConstructor  constructor = 1;
    int64 from_id = 3;
    int64 peer_user_id = 4;
    repeated InboxMessageId id = 5;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_readChatMediaUnreadToInbox {
    TLConstructor  constructor = 1;
    int64 from_id = 3;
    int64 peer_chat_id = 4;
    repeated InboxMessageId id = 5;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_updateHistoryReaded {
    TLConstructor  constructor = 1;
    int64 from_id = 3;
    int32 peer_type = 4;
    int64 peer_id = 5;
    int32 max_id = 6;
    int64 sender = 7;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_updatePinnedMessage {
    TLConstructor  constructor = 1;
    int64 user_id = 3;
    bool unpin = 4;
    int32 peer_type = 5;
    int64 peer_id = 6;
    int32 id = 7;
    int64 dialog_message_id = 8;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_unpinAllMessages {
    TLConstructor  constructor = 1;
    int64 user_id = 3;
    int64 auth_key_id = 4;
    int32 peer_type = 5;
    int64 peer_id = 6;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_sendUserMessageToInboxV2 {
    TLConstructor  constructor = 1;
    int64 user_id = 3;
    bool out = 4;
    int64 from_id = 5;
    int64 from_auth_keyId = 6;
    int32 peer_type = 7;
    int64 peer_id = 8;
    repeated mtproto.MessageBox box_list = 9;
    repeated mtproto.User users = 10;
    repeated mtproto.Chat chats = 11;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_editMessageToInboxV2 {
    TLConstructor  constructor = 1;
    int64 user_id = 3;
    bool out = 4;
    int64 from_id = 5;
    int64 from_auth_keyId = 6;
    int32 peer_type = 7;
    int64 peer_id = 8;
    mtproto.MessageBox new_message = 9;
    mtproto.MessageBox dst_message = 10;
    repeated mtproto.User users = 11;
    repeated mtproto.Chat chats = 12;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_readInboxHistory {
    TLConstructor  constructor = 1;
    int64 user_id = 3;
    int64 auth_key_id = 4;
    int32 peer_type = 5;
    int64 peer_id = 6;
    int32 pts = 7;
    int32 pts_count = 8;
    int32 unread_count = 9;
    int32 read_inbox_max_id = 10;
    int32 max_id = 11;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_readOutboxHistory {
    TLConstructor  constructor = 1;
    int64 user_id = 3;
    int32 peer_type = 4;
    int64 peer_id = 5;
    int64 max_dialog_message_id = 6;
}

//--------------------------------------------------------------------------------------------
message TL_inbox_readMediaUnreadToInboxV2 {
    TLConstructor  constructor = 1;
    int64 user_id = 3;
    int32 peer_type = 4;
    int64 peer_id = 5;
    int64 dialog_message_id = 6;
}


//--------------------------------------------------------------------------------------------
// Vector api result type


//--------------------------------------------------------------------------------------------
// rpc

service RPCInbox {
 rpc inbox_editUserMessageToInbox(TL_inbox_editUserMessageToInbox) returns (mtproto.Void) {}
 rpc inbox_editChatMessageToInbox(TL_inbox_editChatMessageToInbox) returns (mtproto.Void) {}
 rpc inbox_deleteMessagesToInbox(TL_inbox_deleteMessagesToInbox) returns (mtproto.Void) {}
 rpc inbox_deleteUserHistoryToInbox(TL_inbox_deleteUserHistoryToInbox) returns (mtproto.Void) {}
 rpc inbox_deleteChatHistoryToInbox(TL_inbox_deleteChatHistoryToInbox) returns (mtproto.Void) {}
 rpc inbox_readUserMediaUnreadToInbox(TL_inbox_readUserMediaUnreadToInbox) returns (mtproto.Void) {}
 rpc inbox_readChatMediaUnreadToInbox(TL_inbox_readChatMediaUnreadToInbox) returns (mtproto.Void) {}
 rpc inbox_updateHistoryReaded(TL_inbox_updateHistoryReaded) returns (mtproto.Void) {}
 rpc inbox_updatePinnedMessage(TL_inbox_updatePinnedMessage) returns (mtproto.Void) {}
 rpc inbox_unpinAllMessages(TL_inbox_unpinAllMessages) returns (mtproto.Void) {}
 rpc inbox_sendUserMessageToInboxV2(TL_inbox_sendUserMessageToInboxV2) returns (mtproto.Void) {}
 rpc inbox_editMessageToInboxV2(TL_inbox_editMessageToInboxV2) returns (mtproto.Void) {}
 rpc inbox_readInboxHistory(TL_inbox_readInboxHistory) returns (mtproto.Void) {}
 rpc inbox_readOutboxHistory(TL_inbox_readOutboxHistory) returns (mtproto.Void) {}
 rpc inbox_readMediaUnreadToInboxV2(TL_inbox_readMediaUnreadToInboxV2) returns (mtproto.Void) {}
}

