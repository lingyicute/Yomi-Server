//
// WARNING! All changes made in this file will be lost!
// Created from 'scheme.tl' by 'mtprotoc'
//
// Copyright (c) 2024-present,  Teamgram Authors.
//  All rights reserved.
//
// Author: Benqi (wubenqi@gmail.com)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: sync.tl.proto

package sync

import (
	mtproto "github.com/teamgram/proto/mtproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TLConstructor int32

const (
	TLConstructor_CRC32_UNKNOWN               TLConstructor = 0
	TLConstructor_CRC32_sync_updatesMe        TLConstructor = -444776161
	TLConstructor_CRC32_sync_updatesNotMe     TLConstructor = -1750314959
	TLConstructor_CRC32_sync_pushUpdates      TLConstructor = -1895114306
	TLConstructor_CRC32_sync_pushUpdatesIfNot TLConstructor = 1074085860
	TLConstructor_CRC32_sync_pushBotUpdates   TLConstructor = -1379667968
	TLConstructor_CRC32_sync_pushRpcResult    TLConstructor = 828180415
	TLConstructor_CRC32_sync_broadcastUpdates TLConstructor = -169648970
)

// Enum value maps for TLConstructor.
var (
	TLConstructor_name = map[int32]string{
		0:           "CRC32_UNKNOWN",
		-444776161:  "CRC32_sync_updatesMe",
		-1750314959: "CRC32_sync_updatesNotMe",
		-1895114306: "CRC32_sync_pushUpdates",
		1074085860:  "CRC32_sync_pushUpdatesIfNot",
		-1379667968: "CRC32_sync_pushBotUpdates",
		828180415:   "CRC32_sync_pushRpcResult",
		-169648970:  "CRC32_sync_broadcastUpdates",
	}
	TLConstructor_value = map[string]int32{
		"CRC32_UNKNOWN":               0,
		"CRC32_sync_updatesMe":        -444776161,
		"CRC32_sync_updatesNotMe":     -1750314959,
		"CRC32_sync_pushUpdates":      -1895114306,
		"CRC32_sync_pushUpdatesIfNot": 1074085860,
		"CRC32_sync_pushBotUpdates":   -1379667968,
		"CRC32_sync_pushRpcResult":    828180415,
		"CRC32_sync_broadcastUpdates": -169648970,
	}
)

func (x TLConstructor) Enum() *TLConstructor {
	p := new(TLConstructor)
	*p = x
	return p
}

func (x TLConstructor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TLConstructor) Descriptor() protoreflect.EnumDescriptor {
	return file_sync_tl_proto_enumTypes[0].Descriptor()
}

func (TLConstructor) Type() protoreflect.EnumType {
	return &file_sync_tl_proto_enumTypes[0]
}

func (x TLConstructor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TLConstructor.Descriptor instead.
func (TLConstructor) EnumDescriptor() ([]byte, []int) {
	return file_sync_tl_proto_rawDescGZIP(), []int{0}
}

// --------------------------------------------------------------------------------------------
type TLSyncUpdatesMe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor   TLConstructor           `protobuf:"varint,1,opt,name=constructor,proto3,enum=sync.TLConstructor" json:"constructor,omitempty"`
	UserId        int64                   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PermAuthKeyId int64                   `protobuf:"varint,4,opt,name=perm_auth_key_id,json=permAuthKeyId,proto3" json:"perm_auth_key_id,omitempty"`
	ServerId      *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	AuthKeyId     *wrapperspb.Int64Value  `protobuf:"bytes,6,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	SessionId     *wrapperspb.Int64Value  `protobuf:"bytes,7,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Updates       *mtproto.Updates        `protobuf:"bytes,8,opt,name=updates,proto3" json:"updates,omitempty"`
}

func (x *TLSyncUpdatesMe) Reset() {
	*x = TLSyncUpdatesMe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_tl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSyncUpdatesMe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSyncUpdatesMe) ProtoMessage() {}

func (x *TLSyncUpdatesMe) ProtoReflect() protoreflect.Message {
	mi := &file_sync_tl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSyncUpdatesMe.ProtoReflect.Descriptor instead.
func (*TLSyncUpdatesMe) Descriptor() ([]byte, []int) {
	return file_sync_tl_proto_rawDescGZIP(), []int{0}
}

func (x *TLSyncUpdatesMe) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLSyncUpdatesMe) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TLSyncUpdatesMe) GetPermAuthKeyId() int64 {
	if x != nil {
		return x.PermAuthKeyId
	}
	return 0
}

func (x *TLSyncUpdatesMe) GetServerId() *wrapperspb.StringValue {
	if x != nil {
		return x.ServerId
	}
	return nil
}

func (x *TLSyncUpdatesMe) GetAuthKeyId() *wrapperspb.Int64Value {
	if x != nil {
		return x.AuthKeyId
	}
	return nil
}

func (x *TLSyncUpdatesMe) GetSessionId() *wrapperspb.Int64Value {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *TLSyncUpdatesMe) GetUpdates() *mtproto.Updates {
	if x != nil {
		return x.Updates
	}
	return nil
}

// --------------------------------------------------------------------------------------------
type TLSyncUpdatesNotMe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor   TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=sync.TLConstructor" json:"constructor,omitempty"`
	UserId        int64            `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PermAuthKeyId int64            `protobuf:"varint,4,opt,name=perm_auth_key_id,json=permAuthKeyId,proto3" json:"perm_auth_key_id,omitempty"`
	Updates       *mtproto.Updates `protobuf:"bytes,5,opt,name=updates,proto3" json:"updates,omitempty"`
}

func (x *TLSyncUpdatesNotMe) Reset() {
	*x = TLSyncUpdatesNotMe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_tl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSyncUpdatesNotMe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSyncUpdatesNotMe) ProtoMessage() {}

func (x *TLSyncUpdatesNotMe) ProtoReflect() protoreflect.Message {
	mi := &file_sync_tl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSyncUpdatesNotMe.ProtoReflect.Descriptor instead.
func (*TLSyncUpdatesNotMe) Descriptor() ([]byte, []int) {
	return file_sync_tl_proto_rawDescGZIP(), []int{1}
}

func (x *TLSyncUpdatesNotMe) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLSyncUpdatesNotMe) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TLSyncUpdatesNotMe) GetPermAuthKeyId() int64 {
	if x != nil {
		return x.PermAuthKeyId
	}
	return 0
}

func (x *TLSyncUpdatesNotMe) GetUpdates() *mtproto.Updates {
	if x != nil {
		return x.Updates
	}
	return nil
}

// --------------------------------------------------------------------------------------------
type TLSyncPushUpdates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=sync.TLConstructor" json:"constructor,omitempty"`
	UserId      int64            `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Updates     *mtproto.Updates `protobuf:"bytes,4,opt,name=updates,proto3" json:"updates,omitempty"`
}

func (x *TLSyncPushUpdates) Reset() {
	*x = TLSyncPushUpdates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_tl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSyncPushUpdates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSyncPushUpdates) ProtoMessage() {}

func (x *TLSyncPushUpdates) ProtoReflect() protoreflect.Message {
	mi := &file_sync_tl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSyncPushUpdates.ProtoReflect.Descriptor instead.
func (*TLSyncPushUpdates) Descriptor() ([]byte, []int) {
	return file_sync_tl_proto_rawDescGZIP(), []int{2}
}

func (x *TLSyncPushUpdates) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLSyncPushUpdates) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TLSyncPushUpdates) GetUpdates() *mtproto.Updates {
	if x != nil {
		return x.Updates
	}
	return nil
}

// --------------------------------------------------------------------------------------------
type TLSyncPushUpdatesIfNot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=sync.TLConstructor" json:"constructor,omitempty"`
	UserId      int64            `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Excludes    []int64          `protobuf:"varint,4,rep,packed,name=excludes,proto3" json:"excludes,omitempty"`
	Updates     *mtproto.Updates `protobuf:"bytes,5,opt,name=updates,proto3" json:"updates,omitempty"`
}

func (x *TLSyncPushUpdatesIfNot) Reset() {
	*x = TLSyncPushUpdatesIfNot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_tl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSyncPushUpdatesIfNot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSyncPushUpdatesIfNot) ProtoMessage() {}

func (x *TLSyncPushUpdatesIfNot) ProtoReflect() protoreflect.Message {
	mi := &file_sync_tl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSyncPushUpdatesIfNot.ProtoReflect.Descriptor instead.
func (*TLSyncPushUpdatesIfNot) Descriptor() ([]byte, []int) {
	return file_sync_tl_proto_rawDescGZIP(), []int{3}
}

func (x *TLSyncPushUpdatesIfNot) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLSyncPushUpdatesIfNot) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TLSyncPushUpdatesIfNot) GetExcludes() []int64 {
	if x != nil {
		return x.Excludes
	}
	return nil
}

func (x *TLSyncPushUpdatesIfNot) GetUpdates() *mtproto.Updates {
	if x != nil {
		return x.Updates
	}
	return nil
}

// --------------------------------------------------------------------------------------------
type TLSyncPushBotUpdates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=sync.TLConstructor" json:"constructor,omitempty"`
	UserId      int64            `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Updates     *mtproto.Updates `protobuf:"bytes,4,opt,name=updates,proto3" json:"updates,omitempty"`
}

func (x *TLSyncPushBotUpdates) Reset() {
	*x = TLSyncPushBotUpdates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_tl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSyncPushBotUpdates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSyncPushBotUpdates) ProtoMessage() {}

func (x *TLSyncPushBotUpdates) ProtoReflect() protoreflect.Message {
	mi := &file_sync_tl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSyncPushBotUpdates.ProtoReflect.Descriptor instead.
func (*TLSyncPushBotUpdates) Descriptor() ([]byte, []int) {
	return file_sync_tl_proto_rawDescGZIP(), []int{4}
}

func (x *TLSyncPushBotUpdates) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLSyncPushBotUpdates) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TLSyncPushBotUpdates) GetUpdates() *mtproto.Updates {
	if x != nil {
		return x.Updates
	}
	return nil
}

// --------------------------------------------------------------------------------------------
type TLSyncPushRpcResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor    TLConstructor `protobuf:"varint,1,opt,name=constructor,proto3,enum=sync.TLConstructor" json:"constructor,omitempty"`
	AuthKeyId      int64         `protobuf:"varint,3,opt,name=auth_key_id,json=authKeyId,proto3" json:"auth_key_id,omitempty"`
	PermAuthKeyId  int64         `protobuf:"varint,4,opt,name=perm_auth_key_id,json=permAuthKeyId,proto3" json:"perm_auth_key_id,omitempty"`
	ServerId       string        `protobuf:"bytes,5,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	SessionId      int64         `protobuf:"varint,6,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ClientReqMsgId int64         `protobuf:"varint,7,opt,name=client_req_msg_id,json=clientReqMsgId,proto3" json:"client_req_msg_id,omitempty"`
	RpcResult      []byte        `protobuf:"bytes,8,opt,name=rpc_result,json=rpcResult,proto3" json:"rpc_result,omitempty"`
}

func (x *TLSyncPushRpcResult) Reset() {
	*x = TLSyncPushRpcResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_tl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSyncPushRpcResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSyncPushRpcResult) ProtoMessage() {}

func (x *TLSyncPushRpcResult) ProtoReflect() protoreflect.Message {
	mi := &file_sync_tl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSyncPushRpcResult.ProtoReflect.Descriptor instead.
func (*TLSyncPushRpcResult) Descriptor() ([]byte, []int) {
	return file_sync_tl_proto_rawDescGZIP(), []int{5}
}

func (x *TLSyncPushRpcResult) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLSyncPushRpcResult) GetAuthKeyId() int64 {
	if x != nil {
		return x.AuthKeyId
	}
	return 0
}

func (x *TLSyncPushRpcResult) GetPermAuthKeyId() int64 {
	if x != nil {
		return x.PermAuthKeyId
	}
	return 0
}

func (x *TLSyncPushRpcResult) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *TLSyncPushRpcResult) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *TLSyncPushRpcResult) GetClientReqMsgId() int64 {
	if x != nil {
		return x.ClientReqMsgId
	}
	return 0
}

func (x *TLSyncPushRpcResult) GetRpcResult() []byte {
	if x != nil {
		return x.RpcResult
	}
	return nil
}

// --------------------------------------------------------------------------------------------
type TLSyncBroadcastUpdates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constructor   TLConstructor    `protobuf:"varint,1,opt,name=constructor,proto3,enum=sync.TLConstructor" json:"constructor,omitempty"`
	BroadcastType int32            `protobuf:"varint,3,opt,name=broadcast_type,json=broadcastType,proto3" json:"broadcast_type,omitempty"`
	ChatId        int64            `protobuf:"varint,4,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ExcludeIdList []int64          `protobuf:"varint,5,rep,packed,name=exclude_id_list,json=excludeIdList,proto3" json:"exclude_id_list,omitempty"`
	Updates       *mtproto.Updates `protobuf:"bytes,6,opt,name=updates,proto3" json:"updates,omitempty"`
}

func (x *TLSyncBroadcastUpdates) Reset() {
	*x = TLSyncBroadcastUpdates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sync_tl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSyncBroadcastUpdates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSyncBroadcastUpdates) ProtoMessage() {}

func (x *TLSyncBroadcastUpdates) ProtoReflect() protoreflect.Message {
	mi := &file_sync_tl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSyncBroadcastUpdates.ProtoReflect.Descriptor instead.
func (*TLSyncBroadcastUpdates) Descriptor() ([]byte, []int) {
	return file_sync_tl_proto_rawDescGZIP(), []int{6}
}

func (x *TLSyncBroadcastUpdates) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *TLSyncBroadcastUpdates) GetBroadcastType() int32 {
	if x != nil {
		return x.BroadcastType
	}
	return 0
}

func (x *TLSyncBroadcastUpdates) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *TLSyncBroadcastUpdates) GetExcludeIdList() []int64 {
	if x != nil {
		return x.ExcludeIdList
	}
	return nil
}

func (x *TLSyncBroadcastUpdates) GetUpdates() *mtproto.Updates {
	if x != nil {
		return x.Updates
	}
	return nil
}

var File_sync_tl_proto protoreflect.FileDescriptor

var file_sync_tl_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x74, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x73, 0x79, 0x6e, 0x63, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x74, 0x6c,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x74, 0x6c, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x74, 0x6c, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xec, 0x02, 0x0a, 0x11, 0x54, 0x4c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4d, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x73, 0x79, 0x6e, 0x63, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x6d,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x22, 0xbb, 0x01, 0x0a, 0x14, 0x54, 0x4c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x4d, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x70, 0x65,
	0x72, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22,
	0x91, 0x01, 0x0a, 0x13, 0x54, 0x4c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x75, 0x73, 0x68,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73,
	0x79, 0x6e, 0x63, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x18, 0x54, 0x4c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x70, 0x75, 0x73, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x49, 0x66, 0x4e, 0x6f, 0x74,
	0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x54, 0x4c, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x54, 0x4c, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x42, 0x6f, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e,
	0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22,
	0x9d, 0x02, 0x0a, 0x15, 0x54, 0x4c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x75, 0x73, 0x68,
	0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d,
	0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x70, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xe5, 0x01, 0x0a, 0x18, 0x54, 0x4c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2a, 0xa9, 0x02, 0x0a, 0x0d, 0x54, 0x4c, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x52, 0x43,
	0x33, 0x32, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x14,
	0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x4d, 0x65, 0x10, 0x9f, 0x82, 0xf5, 0xab, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12,
	0x24, 0x0a, 0x17, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x4d, 0x65, 0x10, 0xb1, 0xa0, 0xb1, 0xbd, 0xf9,
	0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x23, 0x0a, 0x16, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x10,
	0xbe, 0xb3, 0xab, 0xf8, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x23, 0x0a, 0x1b, 0x43, 0x52,
	0x43, 0x33, 0x32, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x10, 0xe4, 0xff, 0x94, 0x80, 0x04, 0x12,
	0x26, 0x0a, 0x19, 0x43, 0x52, 0x43, 0x33, 0x32, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x75,
	0x73, 0x68, 0x42, 0x6f, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x10, 0x80, 0xe0, 0x8f,
	0xee, 0xfa, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x20, 0x0a, 0x18, 0x43, 0x52, 0x43, 0x33, 0x32,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x10, 0xbf, 0x8f, 0xf4, 0x8a, 0x03, 0x12, 0x28, 0x0a, 0x1b, 0x43, 0x52, 0x43,
	0x33, 0x32, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x10, 0xb6, 0xb9, 0x8d, 0xaf, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x32, 0xe5, 0x03, 0x0a, 0x07, 0x52, 0x50, 0x43, 0x53, 0x79, 0x6e, 0x63, 0x12,
	0x3a, 0x0a, 0x0e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4d,
	0x65, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x54, 0x4c, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4d, 0x65, 0x1a, 0x0d, 0x2e, 0x6d, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x11, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x4d, 0x65,
	0x12, 0x1a, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x54, 0x4c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x4d, 0x65, 0x1a, 0x0d, 0x2e, 0x6d,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3e, 0x0a,
	0x10, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x54, 0x4c, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x70, 0x75, 0x73, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x0d, 0x2e, 0x6d,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x15, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x54, 0x4c,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x1a, 0x0d, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x13, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x70, 0x75, 0x73, 0x68, 0x42, 0x6f, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1c,
	0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x54, 0x4c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x75,
	0x73, 0x68, 0x42, 0x6f, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x0d, 0x2e, 0x6d,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x12, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x54, 0x4c, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x1a, 0x0d, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22,
	0x00, 0x12, 0x48, 0x0a, 0x15, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x79, 0x6e,
	0x63, 0x2e, 0x54, 0x4c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x0d, 0x2e, 0x6d, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x42, 0x3d, 0x5a, 0x3b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x67, 0x72,
	0x61, 0x6d, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x67, 0x72, 0x61, 0x6d, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x2f, 0x73, 0x79, 0x6e, 0x63, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sync_tl_proto_rawDescOnce sync.Once
	file_sync_tl_proto_rawDescData = file_sync_tl_proto_rawDesc
)

func file_sync_tl_proto_rawDescGZIP() []byte {
	file_sync_tl_proto_rawDescOnce.Do(func() {
		file_sync_tl_proto_rawDescData = protoimpl.X.CompressGZIP(file_sync_tl_proto_rawDescData)
	})
	return file_sync_tl_proto_rawDescData
}

var file_sync_tl_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sync_tl_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sync_tl_proto_goTypes = []interface{}{
	(TLConstructor)(0),             // 0: sync.TLConstructor
	(*TLSyncUpdatesMe)(nil),        // 1: sync.TL_sync_updatesMe
	(*TLSyncUpdatesNotMe)(nil),     // 2: sync.TL_sync_updatesNotMe
	(*TLSyncPushUpdates)(nil),      // 3: sync.TL_sync_pushUpdates
	(*TLSyncPushUpdatesIfNot)(nil), // 4: sync.TL_sync_pushUpdatesIfNot
	(*TLSyncPushBotUpdates)(nil),   // 5: sync.TL_sync_pushBotUpdates
	(*TLSyncPushRpcResult)(nil),    // 6: sync.TL_sync_pushRpcResult
	(*TLSyncBroadcastUpdates)(nil), // 7: sync.TL_sync_broadcastUpdates
	(*wrapperspb.StringValue)(nil), // 8: google.protobuf.StringValue
	(*wrapperspb.Int64Value)(nil),  // 9: google.protobuf.Int64Value
	(*mtproto.Updates)(nil),        // 10: mtproto.Updates
	(*mtproto.Void)(nil),           // 11: mtproto.Void
}
var file_sync_tl_proto_depIdxs = []int32{
	0,  // 0: sync.TL_sync_updatesMe.constructor:type_name -> sync.TLConstructor
	8,  // 1: sync.TL_sync_updatesMe.server_id:type_name -> google.protobuf.StringValue
	9,  // 2: sync.TL_sync_updatesMe.auth_key_id:type_name -> google.protobuf.Int64Value
	9,  // 3: sync.TL_sync_updatesMe.session_id:type_name -> google.protobuf.Int64Value
	10, // 4: sync.TL_sync_updatesMe.updates:type_name -> mtproto.Updates
	0,  // 5: sync.TL_sync_updatesNotMe.constructor:type_name -> sync.TLConstructor
	10, // 6: sync.TL_sync_updatesNotMe.updates:type_name -> mtproto.Updates
	0,  // 7: sync.TL_sync_pushUpdates.constructor:type_name -> sync.TLConstructor
	10, // 8: sync.TL_sync_pushUpdates.updates:type_name -> mtproto.Updates
	0,  // 9: sync.TL_sync_pushUpdatesIfNot.constructor:type_name -> sync.TLConstructor
	10, // 10: sync.TL_sync_pushUpdatesIfNot.updates:type_name -> mtproto.Updates
	0,  // 11: sync.TL_sync_pushBotUpdates.constructor:type_name -> sync.TLConstructor
	10, // 12: sync.TL_sync_pushBotUpdates.updates:type_name -> mtproto.Updates
	0,  // 13: sync.TL_sync_pushRpcResult.constructor:type_name -> sync.TLConstructor
	0,  // 14: sync.TL_sync_broadcastUpdates.constructor:type_name -> sync.TLConstructor
	10, // 15: sync.TL_sync_broadcastUpdates.updates:type_name -> mtproto.Updates
	1,  // 16: sync.RPCSync.sync_updatesMe:input_type -> sync.TL_sync_updatesMe
	2,  // 17: sync.RPCSync.sync_updatesNotMe:input_type -> sync.TL_sync_updatesNotMe
	3,  // 18: sync.RPCSync.sync_pushUpdates:input_type -> sync.TL_sync_pushUpdates
	4,  // 19: sync.RPCSync.sync_pushUpdatesIfNot:input_type -> sync.TL_sync_pushUpdatesIfNot
	5,  // 20: sync.RPCSync.sync_pushBotUpdates:input_type -> sync.TL_sync_pushBotUpdates
	6,  // 21: sync.RPCSync.sync_pushRpcResult:input_type -> sync.TL_sync_pushRpcResult
	7,  // 22: sync.RPCSync.sync_broadcastUpdates:input_type -> sync.TL_sync_broadcastUpdates
	11, // 23: sync.RPCSync.sync_updatesMe:output_type -> mtproto.Void
	11, // 24: sync.RPCSync.sync_updatesNotMe:output_type -> mtproto.Void
	11, // 25: sync.RPCSync.sync_pushUpdates:output_type -> mtproto.Void
	11, // 26: sync.RPCSync.sync_pushUpdatesIfNot:output_type -> mtproto.Void
	11, // 27: sync.RPCSync.sync_pushBotUpdates:output_type -> mtproto.Void
	11, // 28: sync.RPCSync.sync_pushRpcResult:output_type -> mtproto.Void
	11, // 29: sync.RPCSync.sync_broadcastUpdates:output_type -> mtproto.Void
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_sync_tl_proto_init() }
func file_sync_tl_proto_init() {
	if File_sync_tl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sync_tl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSyncUpdatesMe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_tl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSyncUpdatesNotMe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_tl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSyncPushUpdates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_tl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSyncPushUpdatesIfNot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_tl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSyncPushBotUpdates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_tl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSyncPushRpcResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sync_tl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSyncBroadcastUpdates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sync_tl_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sync_tl_proto_goTypes,
		DependencyIndexes: file_sync_tl_proto_depIdxs,
		EnumInfos:         file_sync_tl_proto_enumTypes,
		MessageInfos:      file_sync_tl_proto_msgTypes,
	}.Build()
	File_sync_tl_proto = out.File
	file_sync_tl_proto_rawDesc = nil
	file_sync_tl_proto_goTypes = nil
	file_sync_tl_proto_depIdxs = nil
}
